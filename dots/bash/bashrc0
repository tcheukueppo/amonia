#!/usr/bin/env bash
#### tcheukueppo's bashrc

### aliases
alias ll='ls --color=auto -lA'
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias et='[ -x /tmp/test ] && /tmp/test'

### envar def
PS3='>>> '
PS2='>> '
#PS1='\u\[\e[1;35m@\e[0m\]\h \[\e[1;31m\W\e[0m\] \$ '

export HISTCONTROL=ignoreboth
export HISTSIZE=1000000
export HISTFILESIZE=10000000
export EDITOR="${EDITOR:-/bin/nvim}"

### shell options
shopt -s checkwinsize

### Map keyseq to the below shell functions
bind -x '"\C-x":__jump_to_dir'
bind -x '"\C-k":__write_dirty_scripts'
bind -x '"\C-l":__exec_latest'
bind -x '"\C-j":wfmux -f'

### functions
__append_path() {

	local new_path="$1"
	[[ "$PATH" =~ :{0,}${new_path%%/}/?(:{1,}|$) ]] || export PATH="${PATH:+$PATH:}$new_path"
}

__exec_latest() {

	local trash_bin="$HOME/.local/bin/trash"
	if [[ -d "$trash_dir" ]]; then
		local stat since=-1

		case `uname -a` in
			(*Linux*) stat='stat --printf "%"' ;;
			(*BSD*)   stat='stat -f "%"' ;;
			(*)       stat='ls' ;;
		esac
		for trash in $trash_dir; do
			time=$( $stat $trash )
			((time > since)) && latest=$trash
		done
		. "$trash_dir/$trash"
	fi
}

__write_dirty_scripts() {

	if command -v fzf >/dev/null; then
		local trash_dir="$HOME"

		for i in {.local,bin,.trash}; do trash_dir+="/$i"; mkdir -p "$trash_dir"; done
		if [[ -d "$trash_dir" ]]; then
			local -A map=(
				[sh]="sh"     [pl]="perl"
				[p6]="raku"   [js]="node"
				[bc]="bc"     [lua]="lua"
				[bash]="bash" [awk]=""
			)
			local extension=$(for ext in "${!map[@]}"; do echo "$ext"; done | fzf --layout=reverse)

			if [[ -n "$extension" ]]; then
				local shbang
				local count=$(ls $trash_dir/*.$extension 2>/dev/null | wc -l)
				local trash="$trash_dir/${count}_trash.$extension"	

				[[ -f "$trash" && `cat $trash | wc -l` == "2" ]] || trash="$trash_dir/$((++count))_trash.$extension"
				## awk doesn't support 'env' since it requres '-f' to specify the source  file
				shbang=$( [[ "$extension" != "awk" ]] && echo "#!/usr/bin/env ${map[$extension]}" || echo "#!/usr/bin/awk -f" )
				printf "%s\n\n\n" "$shbang" > "$trash"
				chmod u+x "$trash"
				${EDITOR:-vis} "$trash"
			fi
		fi
	fi
}

__jump_to_dir() {

	command -v fzf >/dev/null || return $?
	local direc=$(
		  history  \
		| sed -n 's,^ \+[[:digit:]]\+ *cd \+\('\''/\([-\.[:alnum:] ]\+/\?\)\+'\''\|~\?/\([-\.[:alnum:]\\ ]\+/\?\)\+\) *$,\1,p' \
		| sort -u \
		| fzf --layout=reverse
	)

	[[ -n "$direc" ]] && eval "[[ -d $direc ]] && cd $direc"
}

__append_path "$HOME/.local/bin"
__append_path "$HOME/.raku/bin"
__append_path "$HOME/bin"
__append_path "$HOME/node_modules/.bin"
__append_path "/usr/share/perl6/site/bin"
__append_path "/usr/share/perl6/vendor/bin"
__append_path "/usr/share/perl6/core/bin"

## NNN's env variables
# Colorscheme
BLK="04" CHR="04" DIR="04" EXE="00" REG="00" HARDLINK="00" SYMLINK="06" MISSING="00" ORPHAN="01" FIFO="0F" SOCK="0F" OTHER="02"
export NNN_FCOLORS="$BLK$CHR$DIR$EXE$REG$HARDLINK$SYMLINK$MISSING$ORPHAN$FIFO$SOCK$OTHER"
# Unique color for each context
# 0-black, 1-red, 2-green, 3-yellow, 4-blue (default), 5-magenta, 6-cyan, 7-white
export NNN_COLORS='4321'

## always use tmux
command -v wfmux >/dev/null && { [[ -n "$TMUX" ]] || wfmux -f; }
