###############################################################################
##################################################### kueppo's tmux config ####
## Tmux is a terminal multiplexer which permites us to open pseudo-terminals
## on a single terminal, what's a pty? pseudo-terminal : this is a pair of
## virtual character devices which provides a bidirectional communication
## channel, one end of the channel is called the master and the other end is
## called the slave, the slave act as a classical terminal from which commands
## can be passed into. a process that expects to be connected to the terminal
## can now open the slave end of a pseudoterminal and then be driven by a
## process that has opened the master end. Data flow between the master and
## the slave end asynchronously anything that is written on the master end is
## kprovided to the process on the slave end as though it was input type on a
## terminal. data written to the slave will be available at the master end
## promptly. this data is the executed by sh on the master end and the output
## send to the slave hence that's why the communication is said to be
## bidirectional. but enough about pseudo terminal, now let's tmux it as we
## said tmux permits many terminals to be created, accessed and controlled from
## a single screen. it makes it possible by openning many pseudo-terminals under
## the management of tmux when tmux starts, it creates a new session and a
## window on that session. the window occupies the whole screen and can be split
## into rectangular panes, a session can have more than one windows linked to it.
## each of the panes represents a pseudo terminal. a session is displayed on the
## screen by a client. All sessions are managed by a single server. the server
## clients are seperate process which communicate through a socket in /tmp.

set -g prefix M-w
bind M-w send-prefix

## The following bindings are left unchanged
# M-d: detach from the selection/current session
# M-z: to zoom in/zoom out a pane
# M-(: goto next session
# M-): goto previous session

# note that M- can either be alt or "meta"
# by default it's "alt", I reserved "meta" for my wm
bind M-: command-prompt
bind-key i source-file "~/.tmux.conf" ';' display "reloaded"

# operations on panes
unbind M-v
bind M-v split-window -h
unbind M-f
bind M-f split-window -v
unbind M-k
bind M-k select-pane -U
unbind M-j
bind M-j select-pane -D
unbind M-l
bind M-l select-pane -R
unbind M-h
bind M-h select-pane -L
unbind M-p
bind M-p select-pane -l
unbind M-x
bind M-x kill-pane

# operations on windows
unbind M-c
bind M-c new-window
unbind M-e
bind M-e kill-window
unbind M-n
bind M-n next-window
unbind M-b
bind M-b previous-window

# operations on sessions
unbind M-s
bind M-s kill-session
unbind M-m
bind M-m new-session

# killall tmux servers, clients, and sessions.
unbind M-q
bind M-q kill-server

# detach client
unbind M-d
bind M-d detach-client

# open wfmux on a popup pane
unbind M-Enter
bind M-Enter if-shell "command -v wfmux" {
	display-popup -E 'wfmux -u';
}

unbind M-BSpace
bind M-BSpace if-shell "command -v wfmux" {
	display-popup -E 'wfmux -c';
}

# settings
set -sg escape-time 1
set -g default-terminal "screen-256color"

### fg color for active and inactive panes
set -g pane-border-style "fg=white"
set -g pane-active-border-style "fg=blue"

## color settings
### on the statusline
set -g status 2
set -g status-format[1] ""
set -g status-position top
set -g status-style "none"
set -g status-style "fg=blue"
set -g status-justify absolute-centre
set -g status-interval 2
set -g window-status-format ""
set -g window-status-separator ""
set -g window-status-current-format "#[fg=magneta]#[underscore]#[bold]  #T  "
set -g status-left-length 30
set -g status-right-length 30
set -g status-left "#[bg=blue]#[fg=black] #{window_panes} #[fg=blue]#[bg=green]#[fg=black] #W #[bg=default]#[fg=green]"
set -g status-right "#[fg=blue]#[bg=default]#[fg=black]#[bg=blue] #{pid}  #{session_windows} "
